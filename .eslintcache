[{"E:\\Projects\\gocomet-assignment\\src\\index.js":"1","E:\\Projects\\gocomet-assignment\\src\\App.js":"2","E:\\Projects\\gocomet-assignment\\src\\reportWebVitals.js":"3","E:\\Projects\\gocomet-assignment\\src\\Components\\Nav.js":"4","E:\\Projects\\gocomet-assignment\\src\\Components\\Header.js":"5","E:\\Projects\\gocomet-assignment\\src\\Components\\ProductDetails.js":"6"},{"size":552,"mtime":1610582348606,"results":"7","hashOfConfig":"8"},{"size":4682,"mtime":1610582348549,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3339,"mtime":1610579529467,"results":"11","hashOfConfig":"8"},{"size":6213,"mtime":1610579712714,"results":"12","hashOfConfig":"8"},{"size":10620,"mtime":1610582348580,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1viy6dh",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"E:\\Projects\\gocomet-assignment\\src\\index.js",[],"E:\\Projects\\gocomet-assignment\\src\\App.js",[],["29","30"],"E:\\Projects\\gocomet-assignment\\src\\reportWebVitals.js",[],"E:\\Projects\\gocomet-assignment\\src\\Components\\Nav.js",[],"E:\\Projects\\gocomet-assignment\\src\\Components\\Header.js",["31"],"import React, {useState} from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\n// Header.Js renders the Header for the Container.\r\n\r\n\r\nexport default function Header({cart, clearCart, decCartItem, incCartItem, removeCartItem}) {\r\n\r\n    const [showCart, setShowCart] = useState(false);\r\n\r\n    return (\r\n        <div className={\"Header container d-flex flex-wrap align-items-center justify-content-between pt-3 pb-3 pl-0 pr-0\"}>\r\n\r\n            {/* Currency Selector */}\r\n            <div className={\"col-2 col-md-4 d-flex p-0\"}>\r\n                <select name=\"Currency\" defaultValue={\"INR\"} className={\"no-border\"}>\r\n                    <option value=\"USD\" >USD</option>\r\n                    <option value=\"EUR\">EUR</option>\r\n                    <option value=\"GBP\">GBP</option>\r\n                    <option value=\"CAD\">CAD</option>\r\n                    <option value=\"CNY\">CNY</option>\r\n                    <option value=\"INR\">INR</option>\r\n                    <option value=\"JPY\">JPY</option>\r\n                    <option value=\"PLZ\">PLZ</option>\r\n                    <option value=\"RUR\">RURs</option>\r\n                    <option value=\"SGD\">RUR</option>\r\n                </select>\r\n            </div>\r\n\r\n            {/* Brand Title */}\r\n            <div className={\"col-4\"}>\r\n                <h2><strong>BONFIRE</strong></h2>\r\n            </div>\r\n\r\n            {/* Cart Button */}\r\n            <div className={\"col-4 d-flex p-0\"}>\r\n                <Button variant=\"outline-warning\" className={\"br-0 btn-bonfire ml-auto\"} onClick={()=>setShowCart(true)}>Cart ({cart.length})</Button>\r\n            </div>\r\n\r\n            {/* Cart Modal */}\r\n            <CartModal items={cart}\r\n                       inc={incCartItem}\r\n                       dec={decCartItem}\r\n                       remove={removeCartItem}\r\n                       clearall={clearCart}\r\n                       show={showCart}\r\n                       onHide={()=>setShowCart(false)}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n// Cart Modal Component\r\nfunction CartModal (props) {\r\n\r\n    // Renders all the items inside cart using CartItem component\r\n    const renderItems = (items) => {\r\n        try{\r\n            if(items.length){\r\n                return items.map(item=>{\r\n                    return (\r\n                        <CartItem product={item}\r\n                                  key={item.id}\r\n                                  id={item.id}\r\n                                  inc={props.inc}\r\n                                  dec={props.dec}\r\n                                  remove={props.remove}\r\n                        />\r\n                    )\r\n                })\r\n            }else {\r\n                return (\r\n                    <tr>\r\n                        <td>\r\n                            Empty Cart\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }\r\n        }catch (e) {\r\n            console.log(e);\r\n            return <h2>Cart is Empty</h2>\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal\r\n            {...props}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            dialogClassName=\"modal-50w\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    My Cart\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    <CartTable >\r\n                        {renderItems(props.items)}\r\n                    </CartTable>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p className={\"hover-text-danger hover-underline pointer link-danger mr-2 fs-14 \"} onClick={props.clearall}>Clear All</p>\r\n                <Button onClick={props.onHide}>Checkout</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    )\r\n\r\n}\r\n\r\n// Cart Table inside which Cart Items will be rendered\r\nfunction CartTable (props) {\r\n\r\n    return (\r\n\r\n        <div className={\"cart-table\"}>\r\n            <table className={\"w-100\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        PRODUCT DETAILS\r\n                    </th>\r\n                    <th className={\"tc\"}>\r\n                        QTY\r\n                    </th>\r\n                    <th className={\"tr\"}>\r\n                        TOTAL\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {props.children}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n// Component where directly pass the data as props, it will render items accordingly\r\nfunction CartItem (props) {\r\n\r\n    const {product, id, inc, dec, remove} = props;\r\n    const { image, productName, category, color, size, qty, price } = product;\r\n\r\n    return (\r\n\r\n        <tr>\r\n            <td>\r\n                <div className={\"cart-product-description d-flex mt-3\"}>\r\n                    <img src={image} className={\"cart-product-image\"}/>\r\n                    <div className={\"ml-2\"}>\r\n                        <h5 className={\"pointer\"}>{productName}</h5>\r\n                        <p className={\"m-0 hover-underline pointer\"}>{category}</p>\r\n                        <p className={\"m-0\"}>Color:-{color}</p>\r\n                        <p className={\"m-0\"}>Size:-{size}</p>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td className={\"tc align-items-between\"}>\r\n                <div className={\"d-flex justify-content-center align-items-center\"}>\r\n                    <button className={\"dec-btn btn btn-danger\"} onClick={()=>dec(id)}>-</button>\r\n                    <p className={\"value-holder m-0\"}>{qty}</p>\r\n                    <button className={\"inc-btn btn btn-primary\"} onClick={()=>inc(id)}>+</button>\r\n                </div>\r\n                <div >\r\n                    <p className={\"hover-underline hover-text-danger pointer link-danger m-0\"} onClick={()=>remove(id)}>Remove</p>\r\n                </div>\r\n            </td>\r\n            <td className={\"tr\"}>\r\n                Rs. {price}\r\n            </td>\r\n        </tr>\r\n\r\n    )\r\n\r\n}","E:\\Projects\\gocomet-assignment\\src\\Components\\ProductDetails.js",["32","33","34","35","36"],"import React, {useRef, useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCaretLeft, faStar as faStarSolid} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faHeart, faStar} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {Col, Form, Overlay, Tooltip} from \"react-bootstrap\";\r\nimport {faFacebook, faPinterest, faTwitter} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport default function ProductDetails ({product, color, size, qty,  handleChange, clearSelection, addToCart}) {\r\n\r\n    const [currThumb, setCurrThumb] = useState(0);\r\n    const [fbOverlay, setFbOverlay] = useState(true)\r\n    const fbRef = useRef(null);\r\n    const tweetRef = useRef(null);\r\n    const pinRef = useRef(null);\r\n\r\n    const renderImage = (images) => {\r\n\r\n        return images.map((image,index)=>{\r\n            return (\r\n                <img\r\n                    className={\r\n                        currThumb===index?\r\n                            \"product-thumbnail mr-2 pointer active-thumb\"\r\n                            :\r\n                            \"product-thumbnail mr-2 pointer inactive-thumb\"\r\n                    }\r\n                    src={product.images[index]}\r\n                    id={index}\r\n                    key={index}\r\n                    onClick={()=>setCurrThumb(index)}\r\n                    alt={\"product-thumbnail-\"+index}\r\n                />\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={\"d-flex container mt-4\"}>\r\n\r\n            <div className={\"row\"}>\r\n\r\n                {/* Product Images with Thumbnails */}\r\n                <div className={\"product-gallery col-12 col-md-6 mb-3\"}>\r\n                    <div className={\"product-view\"}>\r\n                        <img className={\"product-image\"} src={product.images[currThumb]} alt={\"product\"}/>\r\n                    </div>\r\n                    <div className={\"product-thumbs mt-3\"}>\r\n                        {renderImage(product.images)}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* Product Specifications */}\r\n                <div className={\"product-specs col-12 col-md-6 tl\"}>\r\n\r\n                    {/* Back to Category Option */}\r\n                    <p>\r\n                        <FontAwesomeIcon icon={faCaretLeft} /> <a href={\"#\"} className={\"text-black\"}>Back to {product.category}</a>\r\n                    </p>\r\n\r\n\r\n                    {/* Product Title */}\r\n                    <h3>{product.productName}</h3>\r\n\r\n                    {/* Product Review */}\r\n                    <div className={\"product-review d-flex mb-4 mt-3\"}>\r\n                        <div className={\"fs-12 underline pointer\"}>\r\n                            <FontAwesomeIcon className={\"color-review\"} icon={faStarSolid} />\r\n                            <FontAwesomeIcon className={\"color-review\"} icon={faStarSolid} />\r\n                            <FontAwesomeIcon className={\"color-review\"} icon={faStarSolid} />\r\n                            <FontAwesomeIcon icon={faStar} />\r\n                            <FontAwesomeIcon className={\"mr-2\"} icon={faStar} />\r\n                            3 Review(s)\r\n                        </div>\r\n                        <div className={\"mr-3 ml-3 vr mt-1 mb-1\"} />\r\n                        <a href={\"#\"} className={\"text-black fs-12 underline\"}>ADD A REVIEW</a>\r\n                    </div>\r\n\r\n\r\n                    {/* Product Price Tag */}\r\n                    <h4 className={\"text-blue mb-4\"}>Rs {product.price}</h4>\r\n\r\n\r\n                    {/* Availability, Product Code and Tags */}\r\n                    <p className={\"fs-14 text-blue no-pointer m-0 mb-1\"}><strong className={\"text-black\"}>Availability : </strong>IN STOCK</p>\r\n                    <p className={\"fs-14 text-blue no-pointer m-0 mb-1\"}>\r\n                        <strong className={\"text-black\"}>\r\n                            Product Code : </strong>\r\n                        <a href={\"#\"}\r\n                           className={\"text-blue\"}>\r\n                            #{product.productId}\r\n                        </a>\r\n                    </p>\r\n                    <p className={\"fs-14 no-pointer m-0 mb-4\"}>\r\n                        <strong\r\n                            className={\"text-black\"}>\r\n                            Tags :\r\n                        </strong>\r\n                        {product.tags.map(tag=><a href={\"#\"} className={\"text-blue\"}>{tag},</a>)}\r\n                    </p>\r\n\r\n\r\n                    {/* Product Description */}\r\n                    <p className={\"fs-14 text-black-50 mb-4\"}>\r\n                        {product.productDesc}\r\n                    </p>\r\n\r\n\r\n                    {/* Product's color, size and qty selector form */}\r\n                    <div className={\"product-select mb-3\"}>\r\n\r\n                        <Form>\r\n\r\n                            <Form.Row >\r\n\r\n                                {/* Color Selector */}\r\n                                <Form.Group as={Col} className={\"col-6 col-md-4\"}>\r\n                                    <Form.Label><strong>COLOR</strong></Form.Label>\r\n                                    <Form.Control as=\"select\" name={\"color\"} value={color} onChange={handleChange}>\r\n                                        <option value={\"\"}>Select Color</option>\r\n                                        {product.colors.map(color=><option value={color}>{color}</option>)}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                {/* Size Selector */}\r\n                                <Form.Group as={Col} className={\"col-6 col-md-4\"}>\r\n                                    <Form.Label><strong>SIZE</strong></Form.Label>\r\n                                    <Form.Control as=\"select\" name={\"size\"} value={size} onChange={handleChange}>\r\n                                        <option value={\"\"}>Select Size</option>\r\n                                        {product.sizes.map(size=><option value={size}>{size}</option>)}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                {/* QTY selector */}\r\n                                <Form.Group as={Col} className={\"qty-container col-md-4 \"} >\r\n                                    <Form.Label><strong>QTY</strong></Form.Label>\r\n                                    <Form.Control type=\"number\" name={\"qty\"} value={qty} placeholder=\"0\" onChange={handleChange} className={\"qty-container\"}/>\r\n                                </Form.Group>\r\n\r\n                            </Form.Row>\r\n\r\n                        </Form>\r\n\r\n                    </div>\r\n\r\n                    {/* Clear Selection Option */}\r\n                    <a className={\"text-black underline fs-14\"} onClick={clearSelection}>CLEAR SELECTION</a>\r\n\r\n                    {/* Actions field */}\r\n                    <div className={\"product-actions d-flex flex-wrap mt-4\"}>\r\n\r\n                        {/* Add to Cart button */}\r\n                        <button type={\"button\"} className={\"fs-16 m-1 col-12 col-md-5 add-to-cart btn-60w\"} onClick={addToCart}>\r\n                            Add To Cart\r\n                        </button>\r\n\r\n                        {/* Add to wishlist button */}\r\n                        <button type={\"button\"} className={\"fs-16 m-1 col-12 col-md-5 add-to-wish btn-60w\"}>\r\n                            <FontAwesomeIcon icon={faHeart} className={\"mr-2\"} />Add To Wishlist\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                    {/* Horizontal line */}\r\n                    <hr />\r\n\r\n                    {/* Social share options with tooltips */}\r\n                    <div className={\"product-share d-flex flex-wrap justify-content-between align-items-center\"}>\r\n\r\n                        <p className={\"fs-12 m-0\"}><strong>SHARE THIS</strong></p>\r\n\r\n                        {/* Facebook Share Option */}\r\n                        <div >\r\n                            <button ref={fbRef} className={\"no-border bg-facebook facebook-color\"} onMouseOver={()=>setFbOverlay(true)}>\r\n                                <FontAwesomeIcon className={\"mr-2 no-border\"} icon={faFacebook} />\r\n                                Share\r\n                            </button>\r\n                            <Overlay target={fbRef.current} show={fbOverlay} placement=\"right\">\r\n                                {(props) => (\r\n                                    <Tooltip id=\"facebook-tooltip\" {...props} className={\"bg-white text-black fs-12\"}>\r\n                                        235K\r\n                                    </Tooltip>\r\n                                )}\r\n                            </Overlay>\r\n                        </div>\r\n\r\n                        {/* Twitter Share Option */}\r\n                        <div>\r\n                            <button ref={tweetRef} className={\"no-border bg-twitter twitter-color\"}>\r\n                                <FontAwesomeIcon className={\"mr-2\"} icon={faTwitter} />\r\n                                Tweet\r\n                            </button>\r\n                            <Overlay target={tweetRef.current} show={fbOverlay} placement=\"right\">\r\n                                {(props) => (\r\n                                    <Tooltip id=\"twitter-tooltip\" {...props} className={\"bg-white text-black fs-12\"}>\r\n                                        235K\r\n                                    </Tooltip>\r\n                                )}\r\n                            </Overlay>\r\n                        </div>\r\n\r\n                        {/* Pinterest Share Option */}\r\n                        <div>\r\n                            <button ref={pinRef} className={\"no-border bg-pinterest pinterest-color\"} >\r\n                                <FontAwesomeIcon className={\"mr-2 \"} icon={faPinterest} />\r\n                                Pin It\r\n                            </button>\r\n                            <Overlay target={pinRef.current} show={fbOverlay} placement=\"right\">\r\n                                {(props) => (\r\n                                    <Tooltip id=\"pinterest-tooltip\" show={true} {...props} className={\"bg-white text-black fs-12\"}>\r\n                                        235K\r\n                                    </Tooltip>\r\n                                )}\r\n                            </Overlay>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {/* Horizontal Line */}\r\n                    <hr />\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":158,"column":21,"nodeType":"43","endLine":158,"endColumn":72},{"ruleId":"44","severity":1,"message":"45","line":60,"column":64,"nodeType":"43","endLine":60,"endColumn":103},{"ruleId":"44","severity":1,"message":"45","line":78,"column":25,"nodeType":"43","endLine":78,"endColumn":80},{"ruleId":"44","severity":1,"message":"45","line":91,"column":25,"nodeType":"43","endLine":92,"endColumn":52},{"ruleId":"44","severity":1,"message":"45","line":101,"column":48,"nodeType":"43","endLine":101,"endColumn":86},{"ruleId":"44","severity":1,"message":"46","line":149,"column":21,"nodeType":"43","endLine":149,"endColumn":90},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]