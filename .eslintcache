[{"E:\\Projects\\gocomet-assignment\\src\\index.js":"1","E:\\Projects\\gocomet-assignment\\src\\App.js":"2","E:\\Projects\\gocomet-assignment\\src\\reportWebVitals.js":"3","E:\\Projects\\gocomet-assignment\\src\\Components\\Header.js":"4","E:\\Projects\\gocomet-assignment\\src\\Components\\Nav.js":"5","E:\\Projects\\gocomet-assignment\\src\\Components\\ProductDetails.js":"6"},{"size":552,"mtime":1610520957162,"results":"7","hashOfConfig":"8"},{"size":350,"mtime":1610552957762,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":6460,"mtime":1610545312764,"results":"11","hashOfConfig":"8"},{"size":1999,"mtime":1610545765679,"results":"12","hashOfConfig":"8"},{"size":3623,"mtime":1610556866246,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1viy6dh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Projects\\gocomet-assignment\\src\\index.js",[],["29","30"],"E:\\Projects\\gocomet-assignment\\src\\App.js",["31","32"],"E:\\Projects\\gocomet-assignment\\src\\reportWebVitals.js",[],"E:\\Projects\\gocomet-assignment\\src\\Components\\Header.js",["33"],"import React, {useState} from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\n// Header.Js renders the Header for the Container.\r\n\r\n// Fake Product Data passed :-\r\n\r\nconst fake1 = {\r\n    id: 1,\r\n    productName: \"Sunny Sweatshirt\",\r\n    category: \"Women Top Wear\",\r\n    color: \"Peach\",\r\n    size: \"S\",\r\n    price: \"Rs. 499\",\r\n    productImage: \"https://source.unsplash.com/pONwcn4IcVU/\"\r\n}\r\n\r\nconst fake2 = {\r\n    id: 2,\r\n    productName: \"Blue Shorts\",\r\n    category: \"Women Bottom Wear\",\r\n    color: \"Blue\",\r\n    size: \"S\",\r\n    price: \"Rs. 899\",\r\n    productImage: \"https://source.unsplash.com/pONwcn4IcVU/\"\r\n}\r\n\r\nconst cart = [{\r\n        id: 1,\r\n        product: fake1,\r\n        qty: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        product: fake2,\r\n        qty: 3\r\n    }\r\n];\r\n\r\nconst inc = (id) => {\r\n    cart[id-1].qty+=1;\r\n    console.log(cart);\r\n}\r\n\r\nconst dec = (id) => {\r\n    cart[id-1].qty-=1;\r\n}\r\n\r\nconst remove = (id) => {\r\n    console.log(cart,id)\r\n    cart.splice(id-1);\r\n    console.log(cart)\r\n}\r\n\r\nconst clearAll = () => {\r\n    console.log(\"Before\", cart);\r\n    cart.length = 0;\r\n    console.log(\"After\", cart);\r\n}\r\n\r\n\r\nexport default function Header() {\r\n\r\n    const [showCart, setShowCart] = useState(false);\r\n\r\n    return (\r\n        <div className={\"Header container d-flex flex-wrap align-items-center pt-3 pb-3 pl-0 pr-0\"}>\r\n\r\n            {/* Currency Selector */}\r\n            <div className={\"col-4 d-flex p-0\"}>\r\n                <select name=\"Currency\" defaultValue={\"USD\"} className={\"no-border\"}>\r\n                    <option value=\"USD\" >USD</option>\r\n                    <option value=\"EUR\">EUR</option>\r\n                    <option value=\"GBP\">GBP</option>\r\n                    <option value=\"CAD\">CAD</option>\r\n                    <option value=\"CNY\">CNY</option>\r\n                    <option value=\"INR\">INR</option>\r\n                    <option value=\"JPY\">JPY</option>\r\n                    <option value=\"PLZ\">PLZ</option>\r\n                    <option value=\"RUR\">RURs</option>\r\n                    <option value=\"SGD\">RUR</option>\r\n                </select>\r\n            </div>\r\n\r\n            {/* Brand Title */}\r\n            <div className={\"col-4\"}>\r\n                <h2><strong>BONFIRE</strong></h2>\r\n            </div>\r\n\r\n            {/* Cart Button */}\r\n            <div className={\"col-4 d-flex p-0\"}>\r\n                <Button variant=\"outline-warning\" className={\"br-0 btn-bonfire ml-auto\"} onClick={()=>setShowCart(true)}>Cart ({cart.length})</Button>\r\n            </div>\r\n\r\n            {/* Cart Modal */}\r\n            <CartModal items={cart}\r\n                       inc={inc}\r\n                       dec={dec}\r\n                       remove={remove}\r\n                       clearAll={clearAll}\r\n                       show={showCart}\r\n                       onHide={()=>setShowCart(false)}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n// Cart Modal Component\r\nfunction CartModal (props) {\r\n\r\n    // Renders all the items inside cart using CartItem component\r\n    const renderItems = (items) => {\r\n        return items.map(item=>{\r\n            return (\r\n                <CartItem product={item.product}\r\n                          key={item.id}\r\n                          id={item.id}\r\n                          qty={item.qty}\r\n                          inc={props.inc}\r\n                          dec={props.dec}\r\n                          remove={props.remove}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal\r\n            {...props}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            dialogClassName=\"modal-50w\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    My Cart\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    <CartTable >\r\n                        {renderItems(props.items)}\r\n                    </CartTable>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p className={\"hover-text-danger hover-underline pointer link-danger mr-2 fs-14 \"} onClick={clearAll}>Clear All</p>\r\n                <Button onClick={props.onHide}>Checkout</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    )\r\n\r\n}\r\n\r\n// Cart Table inside which Cart Items will be rendered\r\nfunction CartTable (props) {\r\n\r\n    return (\r\n\r\n        <div className={\"cart-table\"}>\r\n            <table className={\"w-100\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        PRODUCT DETAILS\r\n                    </th>\r\n                    <th className={\"tc\"}>\r\n                        QTY\r\n                    </th>\r\n                    <th className={\"tr\"}>\r\n                        TOTAL\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {props.children}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n// Component where directly pass the data as props, it will render items accordingly\r\nfunction CartItem (props) {\r\n\r\n    const {product, qty, id, inc, dec, remove} = props;\r\n\r\n    return (\r\n\r\n        <tr>\r\n            <td>\r\n                <div className={\"cart-product-description d-flex\"}>\r\n                    <img src={product.productImage} className={\"cart-product-image\"}/>\r\n                    <div className={\"\"}>\r\n                        <h5 className={\"pointer\"}>{product.productName}</h5>\r\n                        <p className={\"m-0 hover-underline pointer\"}>{product.category}</p>\r\n                        <p className={\"m-0\"}>Color:-{product.color}</p>\r\n                        <p className={\"m-0\"}>Size:-{product.size}</p>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td className={\"tc align-items-between\"}>\r\n                <div >\r\n                    <button onClick={()=>dec(id)}>-</button>\r\n                    <span>{qty}</span>\r\n                    <button onClick={()=>inc(id)}>+</button>\r\n                </div>\r\n                <div >\r\n                    <p className={\"hover-underline hover-text-danger link-danger m-0\"} onClick={()=>remove(id)}>Remove</p>\r\n                </div>\r\n            </td>\r\n            <td className={\"tr\"}>\r\n                {product.price}\r\n            </td>\r\n        </tr>\r\n\r\n    )\r\n\r\n}","E:\\Projects\\gocomet-assignment\\src\\Components\\Nav.js",["34"],"import React, {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBars, faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faHeart} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nexport default function Nav () {\r\n\r\n    const [state,setState] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setState(!state);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={\"NavBar container d-flex justify-content-between align-items-center\"}>\r\n            <div className={\"NavBar-menu\"}>\r\n                <FontAwesomeIcon className={\"pointer hover-scale\"} icon={faBars} />\r\n            </div>\r\n            <div className={\"NavBar-links\"}>\r\n                <ul className={\"list-style-none d-flex m-0\"}>\r\n                    <li className={\"mr-1\"}>\r\n                        <p className={\"m-0 pointer hover-scale\"}>HOME</p>\r\n                    </li>\r\n                    <li className={\"mr-1\"}>\r\n                        <p className={\"m-0 pointer hover-scale\"}>MEN</p>\r\n                    </li>\r\n                    <li className={\"mr-1\"}>\r\n                        <p className={\"m-0 pointer hover-scale\"}>WOMEN</p>\r\n                    </li>\r\n                    <li className={\"mr-1\"}>\r\n                        <p className={\"m-0 pointer hover-scale\"}>LOOKBOOK</p>\r\n                    </li>\r\n                    <li className={\"mr-1\"}>\r\n                        <p className={\"m-0 pointer hover-scale\"}>ABOUT</p>\r\n                    </li>\r\n                    <li>\r\n                        <p className={\"m-0 pointer hover-scale\"}>BLOG</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className={\"NavBar-support d-flex\"}>\r\n                <FontAwesomeIcon className={\"pointer hover-scale\"} icon={faHeart} />\r\n                <div className={\"mr-2 ml-2 bl-1\"} />\r\n                <FontAwesomeIcon className={\"pointer hover-scale\"} icon={faSearch} />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}","E:\\Projects\\gocomet-assignment\\src\\Components\\ProductDetails.js",["35","36","37","38","39","40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":14},{"ruleId":"46","severity":1,"message":"50","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":11},{"ruleId":"51","severity":1,"message":"52","line":198,"column":21,"nodeType":"53","endLine":198,"endColumn":87},{"ruleId":"46","severity":1,"message":"54","line":10,"column":11,"nodeType":"48","messageId":"49","endLine":10,"endColumn":17},{"ruleId":"51","severity":1,"message":"52","line":20,"column":17,"nodeType":"53","endLine":30,"endColumn":56},{"ruleId":"51","severity":1,"message":"52","line":50,"column":25,"nodeType":"53","endLine":50,"endColumn":87},{"ruleId":"55","severity":1,"message":"56","line":66,"column":123,"nodeType":"53","endLine":66,"endColumn":161},{"ruleId":"55","severity":1,"message":"56","line":72,"column":25,"nodeType":"53","endLine":72,"endColumn":63},{"ruleId":"55","severity":1,"message":"56","line":73,"column":25,"nodeType":"53","endLine":73,"endColumn":63},{"ruleId":"55","severity":1,"message":"56","line":74,"column":25,"nodeType":"53","endLine":74,"endColumn":63},{"ruleId":"55","severity":1,"message":"56","line":82,"column":21,"nodeType":"53","endLine":82,"endColumn":76},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toggle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]